{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchCountries","fetchCountriesAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7abf5eca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardComponent, Typography, Grid, CardContent } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => {\n\tif (!confirmed) {\n\t\treturn \"Loading...\";\n\t}\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of recovered cases from COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n\tlet changeableUrl = url;\n\n\tif (country) {\n\t\tchangeableUrl = `${url}/countries/${country}`;\n\t}\n\n\ttry {\n\t\tconst { data: { confirmed, deaths, recovered, lastUpdate } } = await axios.get(changeableUrl);\n\n\t\tconsole.log(changeableUrl);\n\n\t\treturn {\n\t\t\tconfirmed,\n\t\t\tdeaths,\n\t\t\trecovered,\n\t\t\tlastUpdate\n\t\t};\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport const fetchDailyData = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(`${url}/daily`);\n\n\t\tconst modifiedData = data.map((dailyData) => ({\n\t\t\tconfirmed: dailyData.confirmed.total,\n\t\t\tdeaths: dailyData.deaths.total,\n\t\t\tdate: dailyData.reportDate\n\t\t}));\n\n\t\treturn modifiedData;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport const fetchCountries = async () => {\n\ttry {\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`);\n\n\t\treturn countries.map((country) => country.name);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n\tconst [dailyData, setDailyData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetDailyData(await fetchDailyData())\n\t\t}\n\n\t\tfetchAPI();\n\t}, []);\n\n\tconst lineChart = (\n\t\tdailyData.length ? (\n\t\t\t<Line\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#3333ff',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t}, {\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\n\t\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t}],\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : null\n\t);\n\n\tconst barChart = (\n\t\tconfirmed ?\n\t\t(\n\t\t\t<Bar\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tlabel: 'No. of poeple',\n\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t'rgba(0, 0, 255, 0.5)',\n\t\t\t\t\t\t\t'rgba(0, 255, 0, 0.5)',\n\t\t\t\t\t\t\t'rgba(255, 0, 0, 0.5)'\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value]\n\t\t\t\t\t}]\n\t\t\t\t}}\n\t\t\t\toptions={{\n\t\t\t\t\tlegend: {display: false},\n\t\t\t\t\ttitle: {display: true, text: `Current state in the ${country}`}\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : null\n\t)\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t{country ? barChart : lineChart}\n\t\t</div>\n\t)\n};\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl, Typography } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\tconst [fetchedCountries, setFetchCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchCountriesAPI = async () => {\n\t\t\tsetFetchCountries(await fetchCountries());\n\t\t}\n\n\t\tfetchCountriesAPI();\n\t}, [setFetchCountries]);\n\n\treturn (\n\t\t<FormControl className={styles.FormControl}>\n\t\t\t<Typography variant=\"body2\">Choose country: </Typography>\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n\t\t\t\t<option value=\"\">Global</option>\n\t\t\t\t{fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n\t\t\t</NativeSelect>\n\t\t</FormControl>\n\t)\n};\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n\tstate = {\n\t\tdata: {},\n\t\tcountry: ''\n\t}\n\n\tasync componentDidMount() {\n\t\tconst fetchedData = await fetchData();\n\n\t\tthis.setState({ data: fetchedData });\n\t}\n\n\thandleCountryChange = async (country) => {\n\t\t// fetch the data\n\t\tconst fetchedData = await fetchData(country);\n\n\t\t// set the state\n\t\tthis.setState({ data: fetchedData, country: country });\n\t}\n\n\trender() {\n\t\tconst { data, country } = this.state;\n\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n\t\t\t\t<Cards data={data}/>\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange}/>\n\t\t\t\t<Chart data={data} country={country}/>\n\t\t\t</div>\n\t\t)\n\t}\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}